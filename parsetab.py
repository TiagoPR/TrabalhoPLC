
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "DO E ELSE EQUAL FALSE FRASE ID IF INF INFEQ INPUT INT NUM OU PRINT SUP SUPEQ THEN TRUE WHILE begin end returnPrograma : Vars Funcs CodEscrever : PRINT corpoescreve '.'corpoescreve : corpoescreve : alter corpoescrevealter : FRASEalter : exprVars : Vars : var VarsFuncs : Funcs : Funcs FuncFunc : ID begin Cod end return expr '.'Func : ID begin Cod end '.'Cod : var : INT ID '.'var : INT ID '=' expr '.'Cod : Linha CodLinha : EscreverLinha : atrLinha : LerLinha : condLinha : SESE : IF cond THEN Cod ELSE Cod Ler : ID '=' INPUT FRASE '.'Linha : CicloCiclo : WHILE cond DO Cod atr : ID '=' expr '.'bool : TRUEbool : FALSEcond : boolcond : exproprelacao : INFoprelacao : EQUALoprelacao : INFEQoprelacao : SUPoprelacao : SUPEQcond : expr oprelacao exprcond : cond E condcond : cond OU condexpr : expr '+' termoexpr : expr '-' termoexpr : termotermo : termo '*' fatortermo : termo '/' fatortermo : fatorfator : NUMfator : ID '(' ')' '.'fator : IDfator : '(' expr ')'"
    
_lr_action_items = {'ID':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,47,48,49,50,53,54,61,62,63,64,65,66,68,69,70,71,72,73,75,77,79,80,81,82,83,85,86,],[-7,-9,-7,7,11,-8,-10,32,-47,-30,-17,-18,-19,-20,-21,-24,50,-29,50,50,-27,-28,-41,-44,-45,50,-14,50,-16,-47,32,50,50,50,50,-31,-32,-33,-34,-35,50,50,50,-5,-6,-47,50,50,-36,-39,-40,-37,-38,-2,32,32,-42,-43,-48,-15,-26,-46,-25,50,-12,-23,32,-22,-11,]),'PRINT':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,29,31,32,33,50,61,62,63,64,65,66,68,69,70,71,72,73,75,77,79,81,82,83,85,86,],[-7,-9,-7,19,-8,-10,19,-47,-30,-17,-18,-19,-20,-21,-24,-29,-27,-28,-41,-44,-45,-14,-16,-47,19,-47,-36,-39,-40,-37,-38,-2,19,19,-42,-43,-48,-15,-26,-46,-25,-12,-23,19,-22,-11,]),'IF':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,29,31,32,33,50,61,62,63,64,65,66,68,69,70,71,72,73,75,77,79,81,82,83,85,86,],[-7,-9,-7,21,-8,-10,21,-47,-30,-17,-18,-19,-20,-21,-24,-29,-27,-28,-41,-44,-45,-14,-16,-47,21,-47,-36,-39,-40,-37,-38,-2,21,21,-42,-43,-48,-15,-26,-46,-25,-12,-23,21,-22,-11,]),'WHILE':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,29,31,32,33,50,61,62,63,64,65,66,68,69,70,71,72,73,75,77,79,81,82,83,85,86,],[-7,-9,-7,22,-8,-10,22,-47,-30,-17,-18,-19,-20,-21,-24,-29,-27,-28,-41,-44,-45,-14,-16,-47,22,-47,-36,-39,-40,-37,-38,-2,22,22,-42,-43,-48,-15,-26,-46,-25,-12,-23,22,-22,-11,]),'TRUE':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,29,31,32,33,44,45,50,61,62,63,64,65,66,68,69,70,71,72,73,75,77,79,81,82,83,85,86,],[-7,-9,-7,23,-8,-10,23,-47,-30,-17,-18,-19,-20,-21,-24,-29,23,23,-27,-28,-41,-44,-45,-14,-16,-47,23,23,23,-47,-36,-39,-40,-37,-38,-2,23,23,-42,-43,-48,-15,-26,-46,-25,-12,-23,23,-22,-11,]),'FALSE':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,29,31,32,33,44,45,50,61,62,63,64,65,66,68,69,70,71,72,73,75,77,79,81,82,83,85,86,],[-7,-9,-7,24,-8,-10,24,-47,-30,-17,-18,-19,-20,-21,-24,-29,24,24,-27,-28,-41,-44,-45,-14,-16,-47,24,24,24,-47,-36,-39,-40,-37,-38,-2,24,24,-42,-43,-48,-15,-26,-46,-25,-12,-23,24,-22,-11,]),'NUM':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,47,48,49,50,53,54,61,62,63,64,65,66,68,69,70,71,72,73,75,77,79,80,81,82,83,85,86,],[-7,-9,-7,27,-8,-10,27,-47,-30,-17,-18,-19,-20,-21,-24,27,-29,27,27,-27,-28,-41,-44,-45,27,-14,27,-16,-47,27,27,27,27,27,-31,-32,-33,-34,-35,27,27,27,-5,-6,-47,27,27,-36,-39,-40,-37,-38,-2,27,27,-42,-43,-48,-15,-26,-46,-25,27,-12,-23,27,-22,-11,]),'(':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,47,48,49,50,53,54,61,62,63,64,65,66,68,69,70,71,72,73,75,77,79,80,81,82,83,85,86,],[-7,-9,-7,28,-8,-10,28,35,-30,-17,-18,-19,-20,-21,-24,28,-29,28,28,-27,-28,-41,-44,-45,28,-14,28,-16,35,28,28,28,28,28,-31,-32,-33,-34,-35,28,28,28,-5,-6,35,28,28,-36,-39,-40,-37,-38,-2,28,28,-42,-43,-48,-15,-26,-46,-25,28,-12,-23,28,-22,-11,]),'$end':([0,1,2,3,5,6,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,29,31,32,50,61,62,63,64,65,66,69,70,71,72,73,75,77,79,81,82,83,85,86,],[-7,0,-9,-7,-13,-8,-1,-10,-13,-47,-30,-17,-18,-19,-20,-21,-24,-29,-27,-28,-41,-44,-45,-14,-16,-47,-47,-36,-39,-40,-37,-38,-2,-13,-42,-43,-48,-15,-26,-46,-25,-12,-23,-13,-22,-11,]),'INT':([0,3,29,73,],[4,4,-14,-15,]),'.':([7,19,25,26,27,46,47,48,49,50,56,58,60,62,63,67,70,71,72,74,76,77,84,],[29,-3,-41,-44,-45,66,-3,-5,-6,-47,73,75,77,-39,-40,-4,-42,-43,-48,81,82,-46,86,]),'=':([7,11,32,],[30,34,34,]),'end':([10,12,13,14,15,16,17,18,20,23,24,25,26,27,31,32,33,50,57,61,62,63,64,65,66,69,70,71,72,75,77,79,82,83,85,],[-13,-30,-17,-18,-19,-20,-21,-24,-29,-27,-28,-41,-44,-45,-16,-47,-13,-47,74,-36,-39,-40,-37,-38,-2,-13,-42,-43,-48,-26,-46,-25,-23,-13,-22,]),'ELSE':([10,12,13,14,15,16,17,18,20,23,24,25,26,27,31,32,50,61,62,63,64,65,66,68,69,70,71,72,75,77,78,79,82,83,85,],[-13,-30,-17,-18,-19,-20,-21,-24,-29,-27,-28,-41,-44,-45,-16,-47,-47,-36,-39,-40,-37,-38,-2,-13,-13,-42,-43,-48,-26,-46,83,-25,-23,-13,-22,]),'begin':([11,],[33,]),'*':([11,25,26,27,32,50,62,63,70,71,72,77,],[-47,53,-44,-45,-47,-47,53,53,-42,-43,-48,-46,]),'/':([11,25,26,27,32,50,62,63,70,71,72,77,],[-47,54,-44,-45,-47,-47,54,54,-42,-43,-48,-46,]),'+':([11,12,25,26,27,32,49,50,55,56,58,61,62,63,70,71,72,77,84,],[-47,37,-41,-44,-45,-47,37,-47,37,37,37,37,-39,-40,-42,-43,-48,-46,37,]),'-':([11,12,25,26,27,32,49,50,55,56,58,61,62,63,70,71,72,77,84,],[-47,38,-41,-44,-45,-47,38,-47,38,38,38,38,-39,-40,-42,-43,-48,-46,38,]),'INF':([11,12,25,26,27,32,50,62,63,70,71,72,77,],[-47,39,-41,-44,-45,-47,-47,-39,-40,-42,-43,-48,-46,]),'EQUAL':([11,12,25,26,27,32,50,62,63,70,71,72,77,],[-47,40,-41,-44,-45,-47,-47,-39,-40,-42,-43,-48,-46,]),'INFEQ':([11,12,25,26,27,32,50,62,63,70,71,72,77,],[-47,41,-41,-44,-45,-47,-47,-39,-40,-42,-43,-48,-46,]),'SUP':([11,12,25,26,27,32,50,62,63,70,71,72,77,],[-47,42,-41,-44,-45,-47,-47,-39,-40,-42,-43,-48,-46,]),'SUPEQ':([11,12,25,26,27,32,50,62,63,70,71,72,77,],[-47,43,-41,-44,-45,-47,-47,-39,-40,-42,-43,-48,-46,]),'E':([11,12,16,20,23,24,25,26,27,32,50,51,52,61,62,63,64,65,70,71,72,77,],[-47,-30,44,-29,-27,-28,-41,-44,-45,-47,-47,44,44,-36,-39,-40,44,44,-42,-43,-48,-46,]),'OU':([11,12,16,20,23,24,25,26,27,32,50,51,52,61,62,63,64,65,70,71,72,77,],[-47,-30,45,-29,-27,-28,-41,-44,-45,-47,-47,45,45,-36,-39,-40,45,45,-42,-43,-48,-46,]),'THEN':([12,20,23,24,25,26,27,50,51,61,62,63,64,65,70,71,72,77,],[-30,-29,-27,-28,-41,-44,-45,-47,68,-36,-39,-40,-37,-38,-42,-43,-48,-46,]),'DO':([12,20,23,24,25,26,27,50,52,61,62,63,64,65,70,71,72,77,],[-30,-29,-27,-28,-41,-44,-45,-47,69,-36,-39,-40,-37,-38,-42,-43,-48,-46,]),'FRASE':([19,25,26,27,47,48,49,50,59,62,63,70,71,72,77,],[48,-41,-44,-45,48,-5,-6,-47,76,-39,-40,-42,-43,-48,-46,]),')':([25,26,27,35,50,55,62,63,70,71,72,77,],[-41,-44,-45,60,-47,72,-39,-40,-42,-43,-48,-46,]),'INPUT':([34,],[59,]),'return':([74,],[80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Vars':([0,3,],[2,6,]),'var':([0,3,],[3,3,]),'Funcs':([2,],[5,]),'Cod':([5,10,33,68,69,83,],[8,31,57,78,79,85,]),'Func':([5,],[9,]),'Linha':([5,10,33,68,69,83,],[10,10,10,10,10,10,]),'expr':([5,10,19,21,22,28,30,33,34,36,44,45,47,68,69,80,83,],[12,12,49,12,12,55,56,12,58,61,12,12,49,12,12,84,12,]),'Escrever':([5,10,33,68,69,83,],[13,13,13,13,13,13,]),'atr':([5,10,33,68,69,83,],[14,14,14,14,14,14,]),'Ler':([5,10,33,68,69,83,],[15,15,15,15,15,15,]),'cond':([5,10,21,22,33,44,45,68,69,83,],[16,16,51,52,16,64,65,16,16,16,]),'SE':([5,10,33,68,69,83,],[17,17,17,17,17,17,]),'Ciclo':([5,10,33,68,69,83,],[18,18,18,18,18,18,]),'bool':([5,10,21,22,33,44,45,68,69,83,],[20,20,20,20,20,20,20,20,20,20,]),'termo':([5,10,19,21,22,28,30,33,34,36,37,38,44,45,47,68,69,80,83,],[25,25,25,25,25,25,25,25,25,25,62,63,25,25,25,25,25,25,25,]),'fator':([5,10,19,21,22,28,30,33,34,36,37,38,44,45,47,53,54,68,69,80,83,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,70,71,26,26,26,26,]),'oprelacao':([12,],[36,]),'corpoescreve':([19,47,],[46,67,]),'alter':([19,47,],[47,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> Vars Funcs Cod','Programa',3,'p_Programa','linguagem_yacc.py',7),
  ('Escrever -> PRINT corpoescreve .','Escrever',3,'p_Escrever','linguagem_yacc.py',11),
  ('corpoescreve -> <empty>','corpoescreve',0,'p_corpoescreve_null','linguagem_yacc.py',15),
  ('corpoescreve -> alter corpoescreve','corpoescreve',2,'p_corpoescreve_alter','linguagem_yacc.py',19),
  ('alter -> FRASE','alter',1,'p_alter_frase','linguagem_yacc.py',23),
  ('alter -> expr','alter',1,'p_alter_expr','linguagem_yacc.py',28),
  ('Vars -> <empty>','Vars',0,'p_Vars_Empty','linguagem_yacc.py',33),
  ('Vars -> var Vars','Vars',2,'p_Vars_Var','linguagem_yacc.py',37),
  ('Funcs -> <empty>','Funcs',0,'p_Funcs_Empty','linguagem_yacc.py',41),
  ('Funcs -> Funcs Func','Funcs',2,'p_Funcs_Func','linguagem_yacc.py',45),
  ('Func -> ID begin Cod end return expr .','Func',7,'p_Func_comRETURN','linguagem_yacc.py',49),
  ('Func -> ID begin Cod end .','Func',5,'p_Func','linguagem_yacc.py',53),
  ('Cod -> <empty>','Cod',0,'p_Cod_Empty','linguagem_yacc.py',57),
  ('var -> INT ID .','var',3,'p_var_tipoID','linguagem_yacc.py',61),
  ('var -> INT ID = expr .','var',5,'p_var_atribuicao','linguagem_yacc.py',69),
  ('Cod -> Linha Cod','Cod',2,'p_Cod_linhas','linguagem_yacc.py',76),
  ('Linha -> Escrever','Linha',1,'p_Linha_Escrever','linguagem_yacc.py',80),
  ('Linha -> atr','Linha',1,'p_Linha_atr','linguagem_yacc.py',84),
  ('Linha -> Ler','Linha',1,'p_Linha_Ler','linguagem_yacc.py',92),
  ('Linha -> cond','Linha',1,'p_Linha_Cond','linguagem_yacc.py',96),
  ('Linha -> SE','Linha',1,'p_Linha_Se','linguagem_yacc.py',100),
  ('SE -> IF cond THEN Cod ELSE Cod','SE',6,'p_Se','linguagem_yacc.py',104),
  ('Ler -> ID = INPUT FRASE .','Ler',5,'p_ler','linguagem_yacc.py',109),
  ('Linha -> Ciclo','Linha',1,'p_Linha_Ciclo','linguagem_yacc.py',113),
  ('Ciclo -> WHILE cond DO Cod','Ciclo',4,'p_ciclo','linguagem_yacc.py',117),
  ('atr -> ID = expr .','atr',4,'p_atr','linguagem_yacc.py',122),
  ('bool -> TRUE','bool',1,'p_bool_true','linguagem_yacc.py',126),
  ('bool -> FALSE','bool',1,'p_bool_false','linguagem_yacc.py',130),
  ('cond -> bool','cond',1,'p_cond_bool','linguagem_yacc.py',134),
  ('cond -> expr','cond',1,'p_cond_expr','linguagem_yacc.py',138),
  ('oprelacao -> INF','oprelacao',1,'p_oprelacao_inf','linguagem_yacc.py',142),
  ('oprelacao -> EQUAL','oprelacao',1,'p_oprelacao_EQUALS','linguagem_yacc.py',146),
  ('oprelacao -> INFEQ','oprelacao',1,'p_oprelacao_infeq','linguagem_yacc.py',150),
  ('oprelacao -> SUP','oprelacao',1,'p_oprelacao_sup','linguagem_yacc.py',154),
  ('oprelacao -> SUPEQ','oprelacao',1,'p_oprelacao_supeq','linguagem_yacc.py',158),
  ('cond -> expr oprelacao expr','cond',3,'p_cond_oprelacao','linguagem_yacc.py',162),
  ('cond -> cond E cond','cond',3,'p_cond_e','linguagem_yacc.py',166),
  ('cond -> cond OU cond','cond',3,'p_cond_ou','linguagem_yacc.py',170),
  ('expr -> expr + termo','expr',3,'p_expr_add','linguagem_yacc.py',174),
  ('expr -> expr - termo','expr',3,'p_expr_sub','linguagem_yacc.py',178),
  ('expr -> termo','expr',1,'p_expr_termo','linguagem_yacc.py',182),
  ('termo -> termo * fator','termo',3,'p_termo_mul','linguagem_yacc.py',186),
  ('termo -> termo / fator','termo',3,'p_termo_div','linguagem_yacc.py',190),
  ('termo -> fator','termo',1,'p_termo_fator','linguagem_yacc.py',194),
  ('fator -> NUM','fator',1,'p_fator_NUM','linguagem_yacc.py',198),
  ('fator -> ID ( ) .','fator',4,'p_fator_func','linguagem_yacc.py',202),
  ('fator -> ID','fator',1,'p_fator_ID','linguagem_yacc.py',206),
  ('fator -> ( expr )','fator',3,'p_fator_expr','linguagem_yacc.py',211),
]
