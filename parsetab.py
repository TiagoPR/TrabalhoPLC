
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "DO E ELSE EQUAL FALSE FRASE ID IF INF INFEQ INPUT INT NUM OU PRINT SUP SUPEQ THEN TRUE WHILE begin end returnPrograma : Vars Funcs CodEscrever : PRINT corpoescreve '.'corpoescreve : corpoescreve : alter corpoescrevealter : FRASEalter : exprVars : Vars : var VarsFuncs : Funcs : Funcs FuncFunc : ID begin Cod end return expr '.'Func : ID begin Cod end '.'Cod : var : INT ID '.'var : INT ID '=' expr '.'Cod : Linha CodLinha : EscreverLinha : atrLinha : ID '(' ')' '.'Linha : LerLinha : condLinha : SESE : IF cond THEN Cod ELSE Cod Ler : ID '=' INPUT FRASE '.'Linha : CicloCiclo : WHILE cond DO Cod atr : ID '=' expr '.'bool : TRUEbool : FALSEcond : boolcond : exproprelacao : INFoprelacao : EQUALoprelacao : INFEQoprelacao : SUPoprelacao : SUPEQcond : expr oprelacao exprcond : cond E condcond : cond OU condexpr : expr '+' termoexpr : expr '-' termoexpr : termotermo : termo '*' fatortermo : termo '/' fatortermo : fatorfator : NUMfator : IDfator : '(' expr ')'"
    
_lr_action_items = {'ID':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,45,46,47,49,50,51,54,55,61,62,63,64,65,66,67,69,70,71,72,73,75,76,79,80,81,82,83,85,86,],[-7,-9,-7,7,11,-8,-10,32,-47,-31,-17,-18,45,-20,-21,-22,-25,45,-30,45,45,-28,-29,-42,-45,-46,-14,45,-16,-47,32,45,45,45,45,-32,-33,-34,-35,-36,-47,45,45,45,-5,-6,45,45,-37,-40,-41,-48,-38,-39,-2,32,32,-43,-44,-15,-19,-27,-26,45,-12,-24,32,-23,-11,]),'PRINT':([0,2,3,5,6,9,10,11,12,13,14,16,17,18,19,21,24,25,26,27,28,29,31,32,33,45,61,62,63,64,65,66,67,69,70,71,72,73,75,76,79,81,82,83,85,86,],[-7,-9,-7,20,-8,-10,20,-47,-31,-17,-18,-20,-21,-22,-25,-30,-28,-29,-42,-45,-46,-14,-16,-47,20,-47,-37,-40,-41,-48,-38,-39,-2,20,20,-43,-44,-15,-19,-27,-26,-12,-24,20,-23,-11,]),'IF':([0,2,3,5,6,9,10,11,12,13,14,16,17,18,19,21,24,25,26,27,28,29,31,32,33,45,61,62,63,64,65,66,67,69,70,71,72,73,75,76,79,81,82,83,85,86,],[-7,-9,-7,22,-8,-10,22,-47,-31,-17,-18,-20,-21,-22,-25,-30,-28,-29,-42,-45,-46,-14,-16,-47,22,-47,-37,-40,-41,-48,-38,-39,-2,22,22,-43,-44,-15,-19,-27,-26,-12,-24,22,-23,-11,]),'WHILE':([0,2,3,5,6,9,10,11,12,13,14,16,17,18,19,21,24,25,26,27,28,29,31,32,33,45,61,62,63,64,65,66,67,69,70,71,72,73,75,76,79,81,82,83,85,86,],[-7,-9,-7,23,-8,-10,23,-47,-31,-17,-18,-20,-21,-22,-25,-30,-28,-29,-42,-45,-46,-14,-16,-47,23,-47,-37,-40,-41,-48,-38,-39,-2,23,23,-43,-44,-15,-19,-27,-26,-12,-24,23,-23,-11,]),'TRUE':([0,2,3,5,6,9,10,11,12,13,14,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,45,46,47,61,62,63,64,65,66,67,69,70,71,72,73,75,76,79,81,82,83,85,86,],[-7,-9,-7,24,-8,-10,24,-47,-31,-17,-18,-20,-21,-22,-25,-30,24,24,-28,-29,-42,-45,-46,-14,-16,-47,24,-47,24,24,-37,-40,-41,-48,-38,-39,-2,24,24,-43,-44,-15,-19,-27,-26,-12,-24,24,-23,-11,]),'FALSE':([0,2,3,5,6,9,10,11,12,13,14,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,45,46,47,61,62,63,64,65,66,67,69,70,71,72,73,75,76,79,81,82,83,85,86,],[-7,-9,-7,25,-8,-10,25,-47,-31,-17,-18,-20,-21,-22,-25,-30,25,25,-28,-29,-42,-45,-46,-14,-16,-47,25,-47,25,25,-37,-40,-41,-48,-38,-39,-2,25,25,-43,-44,-15,-19,-27,-26,-12,-24,25,-23,-11,]),'NUM':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,45,46,47,49,50,51,54,55,61,62,63,64,65,66,67,69,70,71,72,73,75,76,79,80,81,82,83,85,86,],[-7,-9,-7,28,-8,-10,28,-47,-31,-17,-18,28,-20,-21,-22,-25,28,-30,28,28,-28,-29,-42,-45,-46,-14,28,-16,-47,28,28,28,28,28,-32,-33,-34,-35,-36,-47,28,28,28,-5,-6,28,28,-37,-40,-41,-48,-38,-39,-2,28,28,-43,-44,-15,-19,-27,-26,28,-12,-24,28,-23,-11,]),'(':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,45,46,47,49,50,51,54,55,61,62,63,64,65,66,67,69,70,71,72,73,75,76,79,80,81,82,83,85,86,],[-7,-9,-7,15,-8,-10,15,34,-31,-17,-18,15,-20,-21,-22,-25,15,-30,15,15,-28,-29,-42,-45,-46,-14,15,-16,34,15,15,15,15,15,-32,-33,-34,-35,-36,-47,15,15,15,-5,-6,15,15,-37,-40,-41,-48,-38,-39,-2,15,15,-43,-44,-15,-19,-27,-26,15,-12,-24,15,-23,-11,]),'$end':([0,1,2,3,5,6,8,9,10,11,12,13,14,16,17,18,19,21,24,25,26,27,28,29,31,32,45,61,62,63,64,65,66,67,70,71,72,73,75,76,79,81,82,83,85,86,],[-7,0,-9,-7,-13,-8,-1,-10,-13,-47,-31,-17,-18,-20,-21,-22,-25,-30,-28,-29,-42,-45,-46,-14,-16,-47,-47,-37,-40,-41,-48,-38,-39,-2,-13,-43,-44,-15,-19,-27,-26,-12,-24,-13,-23,-11,]),'INT':([0,3,29,73,],[4,4,-14,-15,]),'.':([7,20,26,27,28,45,48,49,50,51,56,58,59,62,63,64,68,71,72,74,77,84,],[29,-3,-42,-45,-46,-47,67,-3,-5,-6,73,75,76,-40,-41,-48,-4,-43,-44,81,82,86,]),'=':([7,11,32,],[30,35,35,]),'end':([10,12,13,14,16,17,18,19,21,24,25,26,27,28,31,32,33,45,57,61,62,63,64,65,66,67,70,71,72,75,76,79,82,83,85,],[-13,-31,-17,-18,-20,-21,-22,-25,-30,-28,-29,-42,-45,-46,-16,-47,-13,-47,74,-37,-40,-41,-48,-38,-39,-2,-13,-43,-44,-19,-27,-26,-24,-13,-23,]),'ELSE':([10,12,13,14,16,17,18,19,21,24,25,26,27,28,31,32,45,61,62,63,64,65,66,67,69,70,71,72,75,76,78,79,82,83,85,],[-13,-31,-17,-18,-20,-21,-22,-25,-30,-28,-29,-42,-45,-46,-16,-47,-47,-37,-40,-41,-48,-38,-39,-2,-13,-13,-43,-44,-19,-27,83,-26,-24,-13,-23,]),'begin':([11,],[33,]),'*':([11,26,27,28,32,45,62,63,64,71,72,],[-47,54,-45,-46,-47,-47,54,54,-48,-43,-44,]),'/':([11,26,27,28,32,45,62,63,64,71,72,],[-47,55,-45,-46,-47,-47,55,55,-48,-43,-44,]),'+':([11,12,26,27,28,32,44,45,51,56,59,61,62,63,64,71,72,84,],[-47,37,-42,-45,-46,-47,37,-47,37,37,37,37,-40,-41,-48,-43,-44,37,]),'-':([11,12,26,27,28,32,44,45,51,56,59,61,62,63,64,71,72,84,],[-47,38,-42,-45,-46,-47,38,-47,38,38,38,38,-40,-41,-48,-43,-44,38,]),'INF':([11,12,26,27,28,32,45,62,63,64,71,72,],[-47,39,-42,-45,-46,-47,-47,-40,-41,-48,-43,-44,]),'EQUAL':([11,12,26,27,28,32,45,62,63,64,71,72,],[-47,40,-42,-45,-46,-47,-47,-40,-41,-48,-43,-44,]),'INFEQ':([11,12,26,27,28,32,45,62,63,64,71,72,],[-47,41,-42,-45,-46,-47,-47,-40,-41,-48,-43,-44,]),'SUP':([11,12,26,27,28,32,45,62,63,64,71,72,],[-47,42,-42,-45,-46,-47,-47,-40,-41,-48,-43,-44,]),'SUPEQ':([11,12,26,27,28,32,45,62,63,64,71,72,],[-47,43,-42,-45,-46,-47,-47,-40,-41,-48,-43,-44,]),'E':([11,12,17,21,24,25,26,27,28,32,45,52,53,61,62,63,64,65,66,71,72,],[-47,-31,46,-30,-28,-29,-42,-45,-46,-47,-47,46,46,-37,-40,-41,-48,46,46,-43,-44,]),'OU':([11,12,17,21,24,25,26,27,28,32,45,52,53,61,62,63,64,65,66,71,72,],[-47,-31,47,-30,-28,-29,-42,-45,-46,-47,-47,47,47,-37,-40,-41,-48,47,47,-43,-44,]),'THEN':([12,21,24,25,26,27,28,45,52,61,62,63,64,65,66,71,72,],[-31,-30,-28,-29,-42,-45,-46,-47,69,-37,-40,-41,-48,-38,-39,-43,-44,]),'DO':([12,21,24,25,26,27,28,45,53,61,62,63,64,65,66,71,72,],[-31,-30,-28,-29,-42,-45,-46,-47,70,-37,-40,-41,-48,-38,-39,-43,-44,]),'FRASE':([20,26,27,28,45,49,50,51,60,62,63,64,71,72,],[50,-42,-45,-46,-47,50,-5,-6,77,-40,-41,-48,-43,-44,]),')':([26,27,28,34,44,45,62,63,64,71,72,],[-42,-45,-46,58,64,-47,-40,-41,-48,-43,-44,]),'INPUT':([35,],[60,]),'return':([74,],[80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Vars':([0,3,],[2,6,]),'var':([0,3,],[3,3,]),'Funcs':([2,],[5,]),'Cod':([5,10,33,69,70,83,],[8,31,57,78,79,85,]),'Func':([5,],[9,]),'Linha':([5,10,33,69,70,83,],[10,10,10,10,10,10,]),'expr':([5,10,15,20,22,23,30,33,35,36,46,47,49,69,70,80,83,],[12,12,44,51,12,12,56,12,59,61,12,12,51,12,12,84,12,]),'Escrever':([5,10,33,69,70,83,],[13,13,13,13,13,13,]),'atr':([5,10,33,69,70,83,],[14,14,14,14,14,14,]),'Ler':([5,10,33,69,70,83,],[16,16,16,16,16,16,]),'cond':([5,10,22,23,33,46,47,69,70,83,],[17,17,52,53,17,65,66,17,17,17,]),'SE':([5,10,33,69,70,83,],[18,18,18,18,18,18,]),'Ciclo':([5,10,33,69,70,83,],[19,19,19,19,19,19,]),'bool':([5,10,22,23,33,46,47,69,70,83,],[21,21,21,21,21,21,21,21,21,21,]),'termo':([5,10,15,20,22,23,30,33,35,36,37,38,46,47,49,69,70,80,83,],[26,26,26,26,26,26,26,26,26,26,62,63,26,26,26,26,26,26,26,]),'fator':([5,10,15,20,22,23,30,33,35,36,37,38,46,47,49,54,55,69,70,80,83,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,71,72,27,27,27,27,]),'oprelacao':([12,],[36,]),'corpoescreve':([20,49,],[48,68,]),'alter':([20,49,],[49,49,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> Vars Funcs Cod','Programa',3,'p_Programa','linguagem_yacc.py',8),
  ('Escrever -> PRINT corpoescreve .','Escrever',3,'p_Escrever','linguagem_yacc.py',12),
  ('corpoescreve -> <empty>','corpoescreve',0,'p_corpoescreve_null','linguagem_yacc.py',16),
  ('corpoescreve -> alter corpoescreve','corpoescreve',2,'p_corpoescreve_alter','linguagem_yacc.py',20),
  ('alter -> FRASE','alter',1,'p_alter_frase','linguagem_yacc.py',24),
  ('alter -> expr','alter',1,'p_alter_expr','linguagem_yacc.py',29),
  ('Vars -> <empty>','Vars',0,'p_Vars_Empty','linguagem_yacc.py',34),
  ('Vars -> var Vars','Vars',2,'p_Vars_Var','linguagem_yacc.py',38),
  ('Funcs -> <empty>','Funcs',0,'p_Funcs_Empty','linguagem_yacc.py',42),
  ('Funcs -> Funcs Func','Funcs',2,'p_Funcs_Func','linguagem_yacc.py',46),
  ('Func -> ID begin Cod end return expr .','Func',7,'p_Func_comRETURN','linguagem_yacc.py',50),
  ('Func -> ID begin Cod end .','Func',5,'p_Func','linguagem_yacc.py',54),
  ('Cod -> <empty>','Cod',0,'p_Cod_Empty','linguagem_yacc.py',58),
  ('var -> INT ID .','var',3,'p_var_tipoID','linguagem_yacc.py',62),
  ('var -> INT ID = expr .','var',5,'p_var_atribuicao','linguagem_yacc.py',70),
  ('Cod -> Linha Cod','Cod',2,'p_Cod_linhas','linguagem_yacc.py',77),
  ('Linha -> Escrever','Linha',1,'p_Linha_Escrever','linguagem_yacc.py',81),
  ('Linha -> atr','Linha',1,'p_Linha_atr','linguagem_yacc.py',85),
  ('Linha -> ID ( ) .','Linha',4,'p_linha_func','linguagem_yacc.py',89),
  ('Linha -> Ler','Linha',1,'p_Linha_Ler','linguagem_yacc.py',97),
  ('Linha -> cond','Linha',1,'p_Linha_Cond','linguagem_yacc.py',101),
  ('Linha -> SE','Linha',1,'p_Linha_Se','linguagem_yacc.py',105),
  ('SE -> IF cond THEN Cod ELSE Cod','SE',6,'p_Se','linguagem_yacc.py',109),
  ('Ler -> ID = INPUT FRASE .','Ler',5,'p_ler','linguagem_yacc.py',114),
  ('Linha -> Ciclo','Linha',1,'p_Linha_Ciclo','linguagem_yacc.py',118),
  ('Ciclo -> WHILE cond DO Cod','Ciclo',4,'p_ciclo','linguagem_yacc.py',122),
  ('atr -> ID = expr .','atr',4,'p_atr','linguagem_yacc.py',127),
  ('bool -> TRUE','bool',1,'p_bool_true','linguagem_yacc.py',131),
  ('bool -> FALSE','bool',1,'p_bool_false','linguagem_yacc.py',135),
  ('cond -> bool','cond',1,'p_cond_bool','linguagem_yacc.py',139),
  ('cond -> expr','cond',1,'p_cond_expr','linguagem_yacc.py',143),
  ('oprelacao -> INF','oprelacao',1,'p_oprelacao_inf','linguagem_yacc.py',148),
  ('oprelacao -> EQUAL','oprelacao',1,'p_oprelacao_EQUALS','linguagem_yacc.py',152),
  ('oprelacao -> INFEQ','oprelacao',1,'p_oprelacao_infeq','linguagem_yacc.py',156),
  ('oprelacao -> SUP','oprelacao',1,'p_oprelacao_sup','linguagem_yacc.py',160),
  ('oprelacao -> SUPEQ','oprelacao',1,'p_oprelacao_supeq','linguagem_yacc.py',164),
  ('cond -> expr oprelacao expr','cond',3,'p_cond_oprelacao','linguagem_yacc.py',168),
  ('cond -> cond E cond','cond',3,'p_cond_e','linguagem_yacc.py',172),
  ('cond -> cond OU cond','cond',3,'p_cond_ou','linguagem_yacc.py',176),
  ('expr -> expr + termo','expr',3,'p_expr_add','linguagem_yacc.py',180),
  ('expr -> expr - termo','expr',3,'p_expr_sub','linguagem_yacc.py',184),
  ('expr -> termo','expr',1,'p_expr_termo','linguagem_yacc.py',188),
  ('termo -> termo * fator','termo',3,'p_termo_mul','linguagem_yacc.py',192),
  ('termo -> termo / fator','termo',3,'p_termo_div','linguagem_yacc.py',196),
  ('termo -> fator','termo',1,'p_termo_fator','linguagem_yacc.py',200),
  ('fator -> NUM','fator',1,'p_fator_NUM','linguagem_yacc.py',204),
  ('fator -> ID','fator',1,'p_fator_ID','linguagem_yacc.py',209),
  ('fator -> ( expr )','fator',3,'p_fator_expr','linguagem_yacc.py',214),
]
