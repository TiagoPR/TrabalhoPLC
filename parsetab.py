
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "DO E ELSE EQUAL FALSE FRASE ID IF INF INFEQ INPUT INT NUM OU PRINT SUP SUPEQ THEN TRUE WHILE begin end returnPrograma : Vars Funcs CodEscrever : PRINT corpoescreve '.'corpoescreve : corpoescreve : alter corpoescrevealter : FRASEalter : exprVars : Vars : var VarsFuncs : Funcs : Funcs FuncFunc : ID begin Cod return expr endCod : var : INT ID '.'var : INT ID '=' expr '.'Cod : Linha CodLinha : EscreverLinha : atrLinha : LerLinha : condLinha : SESE : IF cond THEN Cod ELSE Cod Ler : ID '=' INPUT FRASE '.'Linha : CicloCiclo : WHILE cond DO Cod atr : ID '=' expr '.'bool : TRUEbool : FALSEcond : boolcond : exproprelacao : INFoprelacao : EQUALoprelacao : INFEQoprelacao : SUPoprelacao : SUPEQcond : expr oprelacao exprcond : cond E condcond : cond OU condexpr : expr '+' termoexpr : expr '-' termoexpr : termotermo : termo '*' fatortermo : termo '/' fatortermo : fatorfator : NUMfator : IDfator : '(' expr ')'"
    
_lr_action_items = {'ID':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,52,53,59,60,61,62,63,64,66,67,68,69,70,71,72,73,76,78,79,80,81,],[-7,-9,-7,7,11,-8,-10,32,-45,-29,-16,-17,-18,-19,-20,-23,49,-28,49,49,-26,-27,-40,-43,-44,49,-13,49,-15,-45,32,49,49,49,49,-30,-31,-32,-33,-34,49,49,49,-5,-6,-45,49,49,-35,-38,-39,-36,-37,-2,32,32,-41,-42,-46,-14,49,-25,-24,-22,32,-11,-21,]),'PRINT':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,29,31,32,33,49,59,60,61,62,63,64,66,67,68,69,70,71,73,76,78,79,80,81,],[-7,-9,-7,19,-8,-10,19,-45,-29,-16,-17,-18,-19,-20,-23,-28,-26,-27,-40,-43,-44,-13,-15,-45,19,-45,-35,-38,-39,-36,-37,-2,19,19,-41,-42,-46,-14,-25,-24,-22,19,-11,-21,]),'IF':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,29,31,32,33,49,59,60,61,62,63,64,66,67,68,69,70,71,73,76,78,79,80,81,],[-7,-9,-7,21,-8,-10,21,-45,-29,-16,-17,-18,-19,-20,-23,-28,-26,-27,-40,-43,-44,-13,-15,-45,21,-45,-35,-38,-39,-36,-37,-2,21,21,-41,-42,-46,-14,-25,-24,-22,21,-11,-21,]),'WHILE':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,29,31,32,33,49,59,60,61,62,63,64,66,67,68,69,70,71,73,76,78,79,80,81,],[-7,-9,-7,22,-8,-10,22,-45,-29,-16,-17,-18,-19,-20,-23,-28,-26,-27,-40,-43,-44,-13,-15,-45,22,-45,-35,-38,-39,-36,-37,-2,22,22,-41,-42,-46,-14,-25,-24,-22,22,-11,-21,]),'TRUE':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,29,31,32,33,43,44,49,59,60,61,62,63,64,66,67,68,69,70,71,73,76,78,79,80,81,],[-7,-9,-7,23,-8,-10,23,-45,-29,-16,-17,-18,-19,-20,-23,-28,23,23,-26,-27,-40,-43,-44,-13,-15,-45,23,23,23,-45,-35,-38,-39,-36,-37,-2,23,23,-41,-42,-46,-14,-25,-24,-22,23,-11,-21,]),'FALSE':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,29,31,32,33,43,44,49,59,60,61,62,63,64,66,67,68,69,70,71,73,76,78,79,80,81,],[-7,-9,-7,24,-8,-10,24,-45,-29,-16,-17,-18,-19,-20,-23,-28,24,24,-26,-27,-40,-43,-44,-13,-15,-45,24,24,24,-45,-35,-38,-39,-36,-37,-2,24,24,-41,-42,-46,-14,-25,-24,-22,24,-11,-21,]),'NUM':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,52,53,59,60,61,62,63,64,66,67,68,69,70,71,72,73,76,78,79,80,81,],[-7,-9,-7,27,-8,-10,27,-45,-29,-16,-17,-18,-19,-20,-23,27,-28,27,27,-26,-27,-40,-43,-44,27,-13,27,-15,-45,27,27,27,27,27,-30,-31,-32,-33,-34,27,27,27,-5,-6,-45,27,27,-35,-38,-39,-36,-37,-2,27,27,-41,-42,-46,-14,27,-25,-24,-22,27,-11,-21,]),'(':([0,2,3,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,52,53,59,60,61,62,63,64,66,67,68,69,70,71,72,73,76,78,79,80,81,],[-7,-9,-7,28,-8,-10,28,-45,-29,-16,-17,-18,-19,-20,-23,28,-28,28,28,-26,-27,-40,-43,-44,28,-13,28,-15,-45,28,28,28,28,28,-30,-31,-32,-33,-34,28,28,28,-5,-6,-45,28,28,-35,-38,-39,-36,-37,-2,28,28,-41,-42,-46,-14,28,-25,-24,-22,28,-11,-21,]),'$end':([0,1,2,3,5,6,8,9,10,11,12,13,14,15,16,17,18,20,23,24,25,26,27,29,31,32,49,59,60,61,62,63,64,67,68,69,70,71,73,76,78,79,80,81,],[-7,0,-9,-7,-12,-8,-1,-10,-12,-45,-29,-16,-17,-18,-19,-20,-23,-28,-26,-27,-40,-43,-44,-13,-15,-45,-45,-35,-38,-39,-36,-37,-2,-12,-41,-42,-46,-14,-25,-24,-22,-12,-11,-21,]),'INT':([0,3,29,71,],[4,4,-13,-14,]),'.':([7,19,25,26,27,45,46,47,48,49,55,57,60,61,65,68,69,70,74,],[29,-3,-40,-43,-44,64,-3,-5,-6,-45,71,73,-38,-39,-4,-41,-42,-46,78,]),'=':([7,11,32,],[30,34,34,]),'return':([10,12,13,14,15,16,17,18,20,23,24,25,26,27,31,32,33,49,56,59,60,61,62,63,64,67,68,69,70,73,76,78,79,81,],[-12,-29,-16,-17,-18,-19,-20,-23,-28,-26,-27,-40,-43,-44,-15,-45,-12,-45,72,-35,-38,-39,-36,-37,-2,-12,-41,-42,-46,-25,-24,-22,-12,-21,]),'ELSE':([10,12,13,14,15,16,17,18,20,23,24,25,26,27,31,32,49,59,60,61,62,63,64,66,67,68,69,70,73,75,76,78,79,81,],[-12,-29,-16,-17,-18,-19,-20,-23,-28,-26,-27,-40,-43,-44,-15,-45,-45,-35,-38,-39,-36,-37,-2,-12,-12,-41,-42,-46,-25,79,-24,-22,-12,-21,]),'begin':([11,],[33,]),'*':([11,25,26,27,32,49,60,61,68,69,70,],[-45,52,-43,-44,-45,-45,52,52,-41,-42,-46,]),'/':([11,25,26,27,32,49,60,61,68,69,70,],[-45,53,-43,-44,-45,-45,53,53,-41,-42,-46,]),'+':([11,12,25,26,27,32,48,49,54,55,57,59,60,61,68,69,70,77,],[-45,36,-40,-43,-44,-45,36,-45,36,36,36,36,-38,-39,-41,-42,-46,36,]),'-':([11,12,25,26,27,32,48,49,54,55,57,59,60,61,68,69,70,77,],[-45,37,-40,-43,-44,-45,37,-45,37,37,37,37,-38,-39,-41,-42,-46,37,]),'INF':([11,12,25,26,27,32,49,60,61,68,69,70,],[-45,38,-40,-43,-44,-45,-45,-38,-39,-41,-42,-46,]),'EQUAL':([11,12,25,26,27,32,49,60,61,68,69,70,],[-45,39,-40,-43,-44,-45,-45,-38,-39,-41,-42,-46,]),'INFEQ':([11,12,25,26,27,32,49,60,61,68,69,70,],[-45,40,-40,-43,-44,-45,-45,-38,-39,-41,-42,-46,]),'SUP':([11,12,25,26,27,32,49,60,61,68,69,70,],[-45,41,-40,-43,-44,-45,-45,-38,-39,-41,-42,-46,]),'SUPEQ':([11,12,25,26,27,32,49,60,61,68,69,70,],[-45,42,-40,-43,-44,-45,-45,-38,-39,-41,-42,-46,]),'E':([11,12,16,20,23,24,25,26,27,32,49,50,51,59,60,61,62,63,68,69,70,],[-45,-29,43,-28,-26,-27,-40,-43,-44,-45,-45,43,43,-35,-38,-39,43,43,-41,-42,-46,]),'OU':([11,12,16,20,23,24,25,26,27,32,49,50,51,59,60,61,62,63,68,69,70,],[-45,-29,44,-28,-26,-27,-40,-43,-44,-45,-45,44,44,-35,-38,-39,44,44,-41,-42,-46,]),'THEN':([12,20,23,24,25,26,27,49,50,59,60,61,62,63,68,69,70,],[-29,-28,-26,-27,-40,-43,-44,-45,66,-35,-38,-39,-36,-37,-41,-42,-46,]),'DO':([12,20,23,24,25,26,27,49,51,59,60,61,62,63,68,69,70,],[-29,-28,-26,-27,-40,-43,-44,-45,67,-35,-38,-39,-36,-37,-41,-42,-46,]),'FRASE':([19,25,26,27,46,47,48,49,58,60,61,68,69,70,],[47,-40,-43,-44,47,-5,-6,-45,74,-38,-39,-41,-42,-46,]),')':([25,26,27,49,54,60,61,68,69,70,],[-40,-43,-44,-45,70,-38,-39,-41,-42,-46,]),'end':([25,26,27,49,60,61,68,69,70,77,],[-40,-43,-44,-45,-38,-39,-41,-42,-46,80,]),'INPUT':([34,],[58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'Vars':([0,3,],[2,6,]),'var':([0,3,],[3,3,]),'Funcs':([2,],[5,]),'Cod':([5,10,33,66,67,79,],[8,31,56,75,76,81,]),'Func':([5,],[9,]),'Linha':([5,10,33,66,67,79,],[10,10,10,10,10,10,]),'expr':([5,10,19,21,22,28,30,33,34,35,43,44,46,66,67,72,79,],[12,12,48,12,12,54,55,12,57,59,12,12,48,12,12,77,12,]),'Escrever':([5,10,33,66,67,79,],[13,13,13,13,13,13,]),'atr':([5,10,33,66,67,79,],[14,14,14,14,14,14,]),'Ler':([5,10,33,66,67,79,],[15,15,15,15,15,15,]),'cond':([5,10,21,22,33,43,44,66,67,79,],[16,16,50,51,16,62,63,16,16,16,]),'SE':([5,10,33,66,67,79,],[17,17,17,17,17,17,]),'Ciclo':([5,10,33,66,67,79,],[18,18,18,18,18,18,]),'bool':([5,10,21,22,33,43,44,66,67,79,],[20,20,20,20,20,20,20,20,20,20,]),'termo':([5,10,19,21,22,28,30,33,34,35,36,37,43,44,46,66,67,72,79,],[25,25,25,25,25,25,25,25,25,25,60,61,25,25,25,25,25,25,25,]),'fator':([5,10,19,21,22,28,30,33,34,35,36,37,43,44,46,52,53,66,67,72,79,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,68,69,26,26,26,26,]),'oprelacao':([12,],[35,]),'corpoescreve':([19,46,],[45,65,]),'alter':([19,46,],[46,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> Vars Funcs Cod','Programa',3,'p_Programa','linguagem_yacc.py',7),
  ('Escrever -> PRINT corpoescreve .','Escrever',3,'p_Escrever','linguagem_yacc.py',11),
  ('corpoescreve -> <empty>','corpoescreve',0,'p_corpoescreve_null','linguagem_yacc.py',15),
  ('corpoescreve -> alter corpoescreve','corpoescreve',2,'p_corpoescreve_alter','linguagem_yacc.py',19),
  ('alter -> FRASE','alter',1,'p_alter_frase','linguagem_yacc.py',23),
  ('alter -> expr','alter',1,'p_alter_expr','linguagem_yacc.py',28),
  ('Vars -> <empty>','Vars',0,'p_Vars_Empty','linguagem_yacc.py',33),
  ('Vars -> var Vars','Vars',2,'p_Vars_Var','linguagem_yacc.py',37),
  ('Funcs -> <empty>','Funcs',0,'p_Funcs_Empty','linguagem_yacc.py',41),
  ('Funcs -> Funcs Func','Funcs',2,'p_Funcs_Func','linguagem_yacc.py',45),
  ('Func -> ID begin Cod return expr end','Func',6,'p_Func','linguagem_yacc.py',49),
  ('Cod -> <empty>','Cod',0,'p_Cod_Empty','linguagem_yacc.py',54),
  ('var -> INT ID .','var',3,'p_var_tipoID','linguagem_yacc.py',58),
  ('var -> INT ID = expr .','var',5,'p_var_atribuicao','linguagem_yacc.py',66),
  ('Cod -> Linha Cod','Cod',2,'p_Cod_linhas','linguagem_yacc.py',73),
  ('Linha -> Escrever','Linha',1,'p_Linha_Escrever','linguagem_yacc.py',77),
  ('Linha -> atr','Linha',1,'p_Linha_atr','linguagem_yacc.py',81),
  ('Linha -> Ler','Linha',1,'p_Linha_Ler','linguagem_yacc.py',89),
  ('Linha -> cond','Linha',1,'p_Linha_Cond','linguagem_yacc.py',93),
  ('Linha -> SE','Linha',1,'p_Linha_Se','linguagem_yacc.py',97),
  ('SE -> IF cond THEN Cod ELSE Cod','SE',6,'p_Se','linguagem_yacc.py',101),
  ('Ler -> ID = INPUT FRASE .','Ler',5,'p_ler','linguagem_yacc.py',106),
  ('Linha -> Ciclo','Linha',1,'p_Linha_Ciclo','linguagem_yacc.py',110),
  ('Ciclo -> WHILE cond DO Cod','Ciclo',4,'p_ciclo','linguagem_yacc.py',114),
  ('atr -> ID = expr .','atr',4,'p_atr','linguagem_yacc.py',119),
  ('bool -> TRUE','bool',1,'p_bool_true','linguagem_yacc.py',123),
  ('bool -> FALSE','bool',1,'p_bool_false','linguagem_yacc.py',127),
  ('cond -> bool','cond',1,'p_cond_bool','linguagem_yacc.py',131),
  ('cond -> expr','cond',1,'p_cond_expr','linguagem_yacc.py',135),
  ('oprelacao -> INF','oprelacao',1,'p_oprelacao_inf','linguagem_yacc.py',139),
  ('oprelacao -> EQUAL','oprelacao',1,'p_oprelacao_EQUALS','linguagem_yacc.py',143),
  ('oprelacao -> INFEQ','oprelacao',1,'p_oprelacao_infeq','linguagem_yacc.py',147),
  ('oprelacao -> SUP','oprelacao',1,'p_oprelacao_sup','linguagem_yacc.py',151),
  ('oprelacao -> SUPEQ','oprelacao',1,'p_oprelacao_supeq','linguagem_yacc.py',155),
  ('cond -> expr oprelacao expr','cond',3,'p_cond_oprelacao','linguagem_yacc.py',159),
  ('cond -> cond E cond','cond',3,'p_cond_e','linguagem_yacc.py',163),
  ('cond -> cond OU cond','cond',3,'p_cond_ou','linguagem_yacc.py',167),
  ('expr -> expr + termo','expr',3,'p_expr_add','linguagem_yacc.py',171),
  ('expr -> expr - termo','expr',3,'p_expr_sub','linguagem_yacc.py',175),
  ('expr -> termo','expr',1,'p_expr_termo','linguagem_yacc.py',179),
  ('termo -> termo * fator','termo',3,'p_termo_mul','linguagem_yacc.py',183),
  ('termo -> termo / fator','termo',3,'p_termo_div','linguagem_yacc.py',187),
  ('termo -> fator','termo',1,'p_termo_fator','linguagem_yacc.py',191),
  ('fator -> NUM','fator',1,'p_fator_NUM','linguagem_yacc.py',195),
  ('fator -> ID','fator',1,'p_fator_ID','linguagem_yacc.py',199),
  ('fator -> ( expr )','fator',3,'p_fator_expr','linguagem_yacc.py',207),
]
